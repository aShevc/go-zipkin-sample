package sample

import (
	"github.com/elodina/go-avro"
)

type LogLinedMessage struct {
	Logline *LogLine
	Payload *Message
}

func NewLogLinedMessage() *LogLinedMessage {
	return &LogLinedMessage{
		Logline: NewLogLine(),
		Payload: NewMessage(),
	}
}

func (this *LogLinedMessage) Schema() avro.Schema {
	if _LogLinedMessage_schema_err != nil {
		panic(_LogLinedMessage_schema_err)
	}
	return _LogLinedMessage_schema
}

type LogLine struct {
	TraceInfo *TraceInfo
}

func NewLogLine() *LogLine {
	return &LogLine{}
}

func (this *LogLine) Schema() avro.Schema {
	if _LogLine_schema_err != nil {
		panic(_LogLine_schema_err)
	}
	return _LogLine_schema
}

type TraceInfo struct {
	SpanId       int64
	TraceId      int64
	ParentSpanId interface{}
	Sampled      bool
}

func NewTraceInfo() *TraceInfo {
	return &TraceInfo{
		Sampled: false,
	}
}

func (this *TraceInfo) Schema() avro.Schema {
	if _TraceInfo_schema_err != nil {
		panic(_TraceInfo_schema_err)
	}
	return _TraceInfo_schema
}

type Message struct {
	Time int64
	Msg  string
}

func NewMessage() *Message {
	return &Message{}
}

func (this *Message) Schema() avro.Schema {
	if _Message_schema_err != nil {
		panic(_Message_schema_err)
	}
	return _Message_schema
}

// Generated by codegen. Please do not modify.
var _LogLinedMessage_schema, _LogLinedMessage_schema_err = avro.ParseSchema(`{
    "type": "record",
    "namespace": "avro",
    "name": "LogLinedMessage",
    "fields": [
        {
            "name": "logline",
            "type": {
                "type": "record",
                "name": "LogLine",
                "fields": [
                    {
                        "name": "traceInfo",
                        "default": null,
                        "type": [
                            "null",
                            {
                                "type": "record",
                                "name": "TraceInfo",
                                "fields": [
                                    {
                                        "name": "spanId",
                                        "type": "long"
                                    },
                                    {
                                        "name": "traceId",
                                        "type": "long"
                                    },
                                    {
                                        "name": "parentSpanId",
                                        "default": null,
                                        "type": [
                                            "null",
                                            "long"
                                        ]
                                    },
                                    {
                                        "name": "sampled",
                                        "default": false,
                                        "type": "boolean"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        {
            "name": "payload",
            "type": {
                "type": "record",
                "name": "Message",
                "fields": [
                    {
                        "name": "time",
                        "type": "long"
                    },
                    {
                        "name": "msg",
                        "type": "string"
                    }
                ]
            }
        }
    ]
}`)

// Generated by codegen. Please do not modify.
var _LogLine_schema, _LogLine_schema_err = avro.ParseSchema(`{
    "type": "record",
    "name": "LogLine",
    "fields": [
        {
            "name": "traceInfo",
            "default": null,
            "type": [
                "null",
                {
                    "type": "record",
                    "name": "TraceInfo",
                    "fields": [
                        {
                            "name": "spanId",
                            "type": "long"
                        },
                        {
                            "name": "traceId",
                            "type": "long"
                        },
                        {
                            "name": "parentSpanId",
                            "default": null,
                            "type": [
                                "null",
                                "long"
                            ]
                        },
                        {
                            "name": "sampled",
                            "default": false,
                            "type": "boolean"
                        }
                    ]
                }
            ]
        }
    ]
}`)

// Generated by codegen. Please do not modify.
var _TraceInfo_schema, _TraceInfo_schema_err = avro.ParseSchema(`{
    "type": "record",
    "name": "TraceInfo",
    "fields": [
        {
            "name": "spanId",
            "type": "long"
        },
        {
            "name": "traceId",
            "type": "long"
        },
        {
            "name": "parentSpanId",
            "default": null,
            "type": [
                "null",
                "long"
            ]
        },
        {
            "name": "sampled",
            "default": false,
            "type": "boolean"
        }
    ]
}`)

// Generated by codegen. Please do not modify.
var _Message_schema, _Message_schema_err = avro.ParseSchema(`{
    "type": "record",
    "name": "Message",
    "fields": [
        {
            "name": "time",
            "type": "long"
        },
        {
            "name": "msg",
            "type": "string"
        }
    ]
}`)
